1. Нужен ли тогда метод Update в IComponent?
	Да, этот метод и будет вызываться у компонентов, которые будут содержаться в массивах. В нем будет реализована логика.
2. Сортировка требует времени. Можно ли этого избежать?
	Сортировку можно осуществлять не на каждой итерации GameLoop, а только в момент переключения состояния компонента. Так же можно реализовать свою сортировку, которая не будет проверять все компоненты, а только поднимать активированный компонент, в конец активных. Но если совсем отказываться от сортировки, то можно проверять активирован ли компонент, и если нет, не вызывать метод update у компоеннта(но это придется делать на каждой итерации GameLoop, что тоже займет время). Так же, можно реализовать компоненты, в котором будут только находиться параметры для рендера объекта(как для полигонов, так и для спрайтов) и при рендере, передавать этот компонент в качестве параметра. Переключатель режима будет находится непосредственно в Renderer. В зависимости от типа ренедера будут браться те или иные параметры.
4. Какая коллекция тут лучше подойдет? А в InputManager?
	Думаю HashSet будет оптимально. Так как удаление и добавление будет происходить за O(1).  
5. В InputManager и Renderer есть переменные, это не состояния?
	Наверное не совсем верно выразился, имелось ввиду, что не нужно одновременное существование двух и более разных состояний этого класса. 
6. Что понадобится модифицировать для игры на двоих?
	Реализовать компонент управления таким образом, чтобы кнопки управления настраивались. Затем добавить второй объект космического корабля. Для каждого из этих объектов, создать экземпляр компонента управления, с разными настройками. Дополнительно еще понадобится реализовать поиск ближайшего объекта по Tag, для корректной работы преследования(UfoAiComponent).
7. Как реализовать астероид, которые преследуют летающую тарелку без дублирования существующего кода?
	Изменить компонент UfoAiComponent, сделать его более универсальным(Мне стоило сразу об этом не подумать) В качестве параметра передавать Tag объекта который нужно приследовать. И можно реализовать метод поиска ближайшего объекта. 
8. Как реализовать летающую тарелку, которая стреляет в игрока без дублирования существующего кода?
	Добавить копонент GunComponent к Объекту летающей тарелки. При этом необходимо убрать зависимость этого компонента непосредсвтенно от ввода с клавиатуры. Сделать компонент управления, который будет содержать список команд, которые необходимо выполнить. Заполнять этот список будет AI летающей тарелки или компонент ответсвенный за ввод с клавиатуры.